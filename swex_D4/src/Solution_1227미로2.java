import java.io.*;
import java.util.*;

public class Solution_1227미로2 {
//	public class Solution {
	public static void main(String[] args) throws Exception {
		String src = "1\r\n"
				+ "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\r\n"
				+ "1210000000100000000000000000000000000000001000100010000000000000100000100000001000000010001000000011\r\n"
				+ "1010111110111011101111111111111111111111101010111010111111101110101110101011101111101010101011111011\r\n"
				+ "1000100010100010001000000000100000000000100010100010001010001010100010101010000010001000100010001011\r\n"
				+ "1111101010101111111011111110111011101111111110101111101010111010101011101011111010111111111110111011\r\n"
				+ "1000001010100010000010000010001010100000100000101000101010001000101000001000100010000000000010000011\r\n"
				+ "1011111010111010111110111011101010111110101111101010101011101011101111111110101110111111111010111111\r\n"
				+ "1010001010001010001000100000101010000010100000101010100010001000101000100010101000000000001010100011\r\n"
				+ "1010101111101011101110111111101010111010111110101010111010111110111010101010101111111011111010111011\r\n"
				+ "1010100010001000100000100000001010100010001000100010000010001000100010001000100000001010000010100011\r\n"
				+ "1010111010111011111011101111111010101111101011111111111111101011101111101111111111101110111110101111\r\n"
				+ "1010001000100000000010001000001000100010001000000010000010001000001000001000000000100000100010100011\r\n"
				+ "1011101111111111111110111011101111111010111111111010111010111110111111111011111110111111101110111011\r\n"
				+ "1000100010000000000000101000100000001010100000001010101000101000100000000010000010100000000010000011\r\n"
				+ "1110111010111111111111101110111011111010101110111010101111101011101111111110111010111011111011111011\r\n"
				+ "1000001010001000100010001000101000000010001010000010100010000010001000001000001010001010100010001011\r\n"
				+ "1011101010101010101010101011101111111111111011111110111010111110111010111011101111101010101010101011\r\n"
				+ "1000101010101010001010100010000000000000000010000000001010100000100010000010101000001000101010101011\r\n"
				+ "1010101011101011111010111111111110111111111010111111101010101111111111101110101011111011101011101011\r\n"
				+ "1010101000101010001010000000000010100010001000100000101010100000001000100010101010000010001000001011\r\n"
				+ "1010111110101010111011111111111011101010101011111011101010111111101010111010101011101110111011111011\r\n"
				+ "1010100010101010001000000000001000101000101000000010001000100000100010001000101000101000100010001011\r\n"
				+ "1010101010101011101110111011111110101111101110111110111110111011111111101011101110101010111110101011\r\n"
				+ "1010101010001000001010001010000010001000101010100010000010001000000000101010001010101010100000100011\r\n"
				+ "1010101011111111101011101010111011111011101010101011111011101111111110101110101010111011101111101111\r\n"
				+ "1010001000100010001000101010001010000010001010101000000010100000001000100000101010001000001000100011\r\n"
				+ "1011111011101010111011101011101010111010111010101111111110111111101010111111101011101011111010111111\r\n"
				+ "1010100010001010100000101010001000101000100010101010000000000000101010000000100000101010000010000011\r\n"
				+ "1010101010111010111110101110111111101111101110101010111111111010101011111110111110101110111111111011\r\n"
				+ "1000101010101000000000101000100010000000100000101000001000000010100010000010000010100010000010100011\r\n"
				+ "1110101110101111111111101011101010101110101111101111111011111111111010111011111110111011111010101111\r\n"
				+ "1010101000000000100000001000001010101000100000100000001000000000100010001000000010001000001000100011\r\n"
				+ "1010101011111111101111111111111011101011111110111111101111111010101111101111111011101111101110111011\r\n"
				+ "1000100010001000100010000000100010001000000010001000100000001010000000101010000010001000100010001011\r\n"
				+ "1011111110101010111010111011101110111111111011101010111111101111111111101010111110111110101111101011\r\n"
				+ "1000100000100010000010001010001000100000001010001010000010001000000010001010000000000000100000101011\r\n"
				+ "1110101111111111111011101010111110101111111010111111101010111011111010111011111111111110111110101011\r\n"
				+ "1000100010001000101000101010100000100000001010100000101010001000001010100000000000100010000010001011\r\n"
				+ "1011111010101010101110101010101111111111101010111010101011101011111010101111111111101011111011111011\r\n"
				+ "1000101010101010000010101010001000000000001010001010001000100010001000001000001000001010100010001011\r\n"
				+ "1110101010101011111110101011111110101111111011101011111110111110101111101011101011111010101111101011\r\n"
				+ "1010001000101000100000101000000010101000000010001010001000000010101000101010101000101010000000001011\r\n"
				+ "1010111111101110101111101110111010111011111110111010101111111110101010111010101010101011101111111011\r\n"
				+ "1000100000101000101000101010001000100010000010000010100010000000101010000010001010100000101000000011\r\n"
				+ "1111101110101011101110101011101110101111101011101110111010111111101011111110111010111110111011111011\r\n"
				+ "1000101000001000000000101000100010100000001010001000101010001000101000100010101010000010100010001011\r\n"
				+ "1010101111111011111011101010111010111111111010111011101011101011101110111010101011111010101110111011\r\n"
				+ "1010001000001010001010001010001010101000000010001010000010001000100000100010100010001010001000100011\r\n"
				+ "1011111011101110101010111010101010101011111111111010111110111010111111101110101111101011111110101111\r\n"
				+ "1010000010001000101010001010101010101000100000100010100000101010000000001000100000101000100000101011\r\n"
				+ "1010111110101011101011101110101010101110101110101110101110101011111011101011111110101110111011101011\r\n"
				+ "1010101000101010001000100000101010001000101000101000100010101000101010001010000000000010001000001011\r\n"
				+ "1010101011111010111111111110111011111011101011101011111010101110101011111011111111111011101011111011\r\n"
				+ "1010101000001010000000000010100010000010001010001010001010100000001000000010000010001000101000100011\r\n"
				+ "1010101111101011111111101010101110111111101011101010101010111111111110111110111010101110101110101011\r\n"
				+ "1010100000101000101000001010100000101000001000001000101010000000000010000000101010101000101010101011\r\n"
				+ "1010111110101110101011111110111111101010111111111111101111111111111011111111101010101011101010101111\r\n"
				+ "1000100010101000001000100010000000100010001000001000100000001000000010001000001010100010101010100011\r\n"
				+ "1011101010101011111110101011111110111111101011111010111111101011111110111011101010111110101010111011\r\n"
				+ "1000001000100000100000101000000010000010001000000010000000101000100000100000101010100000101000100011\r\n"
				+ "1111111011111110101011101111111011111010111011111111101111101010111110101111101010101111101011101011\r\n"
				+ "1010000010001000101010001000100010001000101000100010100010001010100010001000001010001000001000101011\r\n"
				+ "1010111110101111101010111110101010111111101110101010111010111010101010111011111011101011111110101011\r\n"
				+ "1000001000100000001010000000101010000000000010101010001010100010001010001000000010001010000010001011\r\n"
				+ "1011111011101111111111101111101011101110111110101010111010111011111011111110111110111010111011111011\r\n"
				+ "1010001010001000001000001000001000101000100010101000100010001010001000000010001000101010001000100011\r\n"
				+ "1110101011111011101011111011111110101011101010101110101111101110101111111011101110101011111010101111\r\n"
				+ "1000101000000010100010001010000000001000101010100010100000100010100000001000100010101000001010100011\r\n"
				+ "1011101011111110111111101010111111111111101010101011111011111010111111101110111010101111101010111011\r\n"
				+ "1010001010000000000000001010001000000010001000101000001010000010000010000010100010001000101010100011\r\n"
				+ "1010111011111011111111101011101011111010111111101110111010111110111011111010101111101010101011101111\r\n"
				+ "1010001000100010000000001010001010000010100000001000100010100010001000001000101000001010001000101011\r\n"
				+ "1011101110101110111111111011111010111110111111111010101110101011101111101111101111101011111110101011\r\n"
				+ "1010000010001000100000001010000010000000100010000010100000101000100010001000001000101000100010101011\r\n"
				+ "1011111011111011101111101010111111111111101010111111111111101011101110111011111010101110101010101011\r\n"
				+ "1000001000001000101000101010100000100000001000100000000010001000001000101010000010100010001010101011\r\n"
				+ "1011101111101110101110101010111011101111101011101111101011111011111011101010111110111111111010101011\r\n"
				+ "1010001000101000101000100010001000000000101010001000101000001000001010001000101000100000000010001011\r\n"
				+ "1110111011101011101010111011101111111110101110111110101111101111111011101111101011101111111110111011\r\n"
				+ "1000100010001000101010001000100000100010101000100000101000100000001000100000000010001000001000100011\r\n"
				+ "1011111010111111101010111110111110101110101011101111101010111111101110101111111111101110101011101011\r\n"
				+ "1000100010100000101010100000000010101000101000001000001010100000001000100010000000001000101000001011\r\n"
				+ "1110101110101110101011101111111110101011101111101011111110101111111011111011101111111011111111111011\r\n"
				+ "1000100000100010001000100000100000100010100000101000000010101000000000101010001000000000100010000011\r\n"
				+ "1011101111101011111010111011101111111010111011101111111010101110111110101010111011111010101010111111\r\n"
				+ "1010100010001010001010000010001000001000001000000000001010100010100000101010001010001010001010100011\r\n"
				+ "1010111011111010101111111110111110101111111111111111111010111011101111101011101010101011111010101011\r\n"
				+ "1010000010001010100000000010000000100000000010000000000010000010001000001000101010101000100010101011\r\n"
				+ "1010111110101010111111111011111111111111111010111111111110111110111010111110101010101111101010111011\r\n"
				+ "1010000000100010100000001000000000100000001010101000000000100000100010000010101010100000001010100011\r\n"
				+ "1011111011111010101110111110111111101111101010101011111111111010111011101110101010111111111010101011\r\n"
				+ "1000100010001010101010100010000000101000101010101000100000001010001010100010101010100000101010001011\r\n"
				+ "1110111110101110101010101011111110101010101010101110101111101111101010111010101010101110101011111011\r\n"
				+ "1000100000101000100010001000000010001010101000100010100010000000101000100010001010001010100010000011\r\n"
				+ "1011101111101011111111111011111011111110101111101010101011111110101111101111111011111010111010111111\r\n"
				+ "1010001000100010000010001000100000100010100000101000101000100000100000100000001000001010001010001311\r\n"
				+ "1010111110111110111010101111101110101010111110101111111110101111111110101011111111101011101111101011\r\n"
				+ "1000000000000000100000100000001000001000000010000000000000100000000000101000000000000000100000000011\r\n"
				+ "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\r\n"
				+ "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		br = new BufferedReader(new StringReader(src));

		for (int tc = 1; tc <= 1; tc++) {
			String t = br.readLine();
			ans = 0;
			map = new int[100][100];
			for (int i = 0; i < 100; i++) {
				String[] tmp = br.readLine().split("");
				for (int j = 0; j < 100; j++) {
					int tmpN = Integer.parseInt(tmp[j]);
					map[i][j] = tmpN;
					if (tmpN == 2) {
						start = new int[] { i, j };
					}
					if (tmpN == 3) {
						end = new int[] { i, j };
					}
				}
			}
			bfs();
			System.out.println("#" + tc + " " + ans);
		}
	}

	static void bfs() {
		boolean[][] visit = new boolean[100][100];
		Queue<int[]> q = new LinkedList<>();
		q.offer(new int[] { start[0], start[1] });
		visit[start[0]][start[1]] = true;
		while (!q.isEmpty()) {
			int[] tmp = q.poll();
			for (int i = 0; i < 4; i++) {
				int cx = tmp[0] + dx[i];
				int cy = tmp[1] + dy[i];
				if (cx < 0 || cy < 0 || cx >= 100 || cy >= 100) {
					continue;
				}
				if (visit[cx][cy]) {
					continue;
				}
				if (map[cx][cy] == 0) {
					q.offer(new int[] { cx, cy });
					visit[cx][cy] = true;
				}
				if (map[cx][cy] == 3) {
					ans = 1;
					return;
				}

			}
		}
	}

	static int[] dx = new int[] { 0, 0, -1, 1 };
	static int[] dy = new int[] { -1, 1, 0, 0 };
	static int ans;
	static int[] start;
	static int[] end;
	static int[][] map;
}
