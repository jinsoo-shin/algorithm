import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Solution_1216회문 {
//	public class Solution {
	public static void main(String[] args) throws NumberFormatException, IOException {
		String src = "1\r\n"
				+ "CCBBCBAABCCCBABCBCAAAACABBACCCCACAABCBBACACAACABCBCCBAABCABBBCCAABBCBBCACABCAAACACABACBCCBAACBCBCAAC\r\n"
				+ "ACBAAAACCACCCBAACAAABACACCABCBCBABBBACBABCAACCBCCACBCBACACACBCACCABACCBCCBAAAAABBACBACACBCCBABCAACBB\r\n"
				+ "CCCACCBCBACBACBCABAABABCCAAAACCCCCBBAABBCCBCCCABBACACAACBCCCBAAACACABCCABCCCCCABCAAAABBBCBBBAABCCACC\r\n"
				+ "CABACBCBBCBABACABBBBBBABBCABCBCBCAABCBCCCBABACCCCABBABBBACBBACBCCCAAACACCABABCCCBCACCBCBCAACACBCCBAC\r\n"
				+ "BCCBCCACCBCBCABBBCCABAACACCBCCCBCCACCBBCBCCCBBCCBACBCBCBBCBABCBACBBABABCBCACBAAABBABACABBCBCCBACCBBC\r\n"
				+ "BBBBCBBAACABACCBCBCCABBBBCCAABCBBCACCBBCAAAABABABBABBBACAAABAABACCBCAACCAABCBBACCACBABBCCCACCBCABCAC\r\n"
				+ "ABBAACCCACBBABBABCCCABABCACABABACCCBACACABCBCCCBABCCCCABCBAABBAAABACCCCABBABABAACABBCACBACACBBCBAABA\r\n"
				+ "ABBBBAABCAACCBACBBAACACABCABACBAABCAABBCCCCCCACBCCCCAABCBABAABCBBAAACCCCCABAAAABCAABBCCCCACCBACABABB\r\n"
				+ "ACCACABABBACBBAACCBBACBBCCACCACCABCCBABABBBACBACBAABCBBCAACAABABBABBAACABCAABCCABACBBBBCABCCCACBACBA\r\n"
				+ "BABACACCABCAACBAABCCACCACBCCAABBCBAABABAACAAAAAACCCBCBBABBBBBCBCACBABABACBBABCBABBCACBCACCBCAAABACAA\r\n"
				+ "ABABACAABABCACCBABABCABCABABBAABABCBABBCABBACCCBBBCCACBACCCBCCAABCAABCBBBCCBACCBABCAACACAABABABACABB\r\n"
				+ "CBBACCACBBBCBABCCACCABCACABAACBBACBACCAABCAAAAACCCABBAABAABCBACCCBCBABACCBCBAABAAACABBAABABBBBBCABAA\r\n"
				+ "AAAABACBBAABBAABBCACABBCBBCAABBCBAAAAACBABCAACAAACAACBCCCBCBABABBCBCACBCAACCAABBBBBACABAAAABCAABABBC\r\n"
				+ "CBCCBCCBBABABBBAACBACCCAACBCBCCABCCCAAABAACBBCACACAAABCCCCBCBBAACACAACCBAACBABAACCCBBBCCCAACBCACBCBB\r\n"
				+ "BBCBCCACCCCABCBCACCBBAACAABAABCCAACCCABABCCBCABBBAAABABBBBAABBCACBBAACCBCAACACACAAACBCACBAACACCABCCA\r\n"
				+ "AAACBAABBCCBAAACCBBBCABABBAACBABACBCBAACABCBABABAABCBCBABAABCACACABAACBBBABCABAACBBCBCCAACCCCACAABAA\r\n"
				+ "ACCBACACCCBABCBBBBBAACABBBBBBBACACCABAACBCBAACBCBCBBCCCBAAABACCBBACBCCBAABACBACCBBBBCCCCCACCBCCAAAAB\r\n"
				+ "ABAACCCCCCBBBBBBABACAABBBCCBCBAAACCBCABBCCABBABBABCBCBCCBBABABCBBBAACBBAACCCCBCCABBABAAAABCCBAAABCBB\r\n"
				+ "AACBACAAAABCABBABABCBBABCABAAACBABCABAAABBBCCAACCAABBCACCCCABCACCCBCBCBBBBBBBACBAACCCCCABACABBCCBBCC\r\n"
				+ "BCBCABABABCBABBCAACCCCBBCACACCCCACBACAABCCCCABCACAAACCABCACCBCCCBBAABBBCBCCCCCBBBCABCBAABABBAACAACAB\r\n"
				+ "AAABCAAABABABCBBCACCAABABACCCABABABABAAAAACAAAABCBAAACABACCBCBBAAAABBBAAACBABABABCABAACAABCCBCCBBCCC\r\n"
				+ "ABCACCBACBCAACACCAAACCCBABBAABCABBBBCACABACCCBCABCACACBCBABBBBAAAAAABCCCCACBCBCBBBABBABBCABCCABACAAB\r\n"
				+ "BCCCBBABAACCCAABCABAABACACBCACBABBBCCBACAAACAAAABCABBBABACCACCBACBACBBBCBCACCCABBABCACCABCCACBCBAAAA\r\n"
				+ "CCBACACCBCBCACBCACCBCACBABACBCBACBACAAAABABBBAAABBBACACABBBCBCAACBCCCBBABABABCABAAABCCCBBBBAAABBCCCC\r\n"
				+ "BBAAACCACACACBABCBABBABCAACACAACCCCBCCABBBACCACCCAABBABABCABCCCAACBABBCBABCABBCBAACACBCBCCABAAAAAAAB\r\n"
				+ "CBABBCCCACACBBABCBABBABCBBACABBAACACBBCBBBBABABAACBBBCCACBBBAACCABCBACBABBABCACACCBAACBAABAABCABBBAC\r\n"
				+ "BBBCCABAABCABCBBCCBBACBBCBAACBBCCCCABACBABBCABBBBCCBBCCBCBACACBABCACCAABABCCBBACABBBCCAABBAACABCBCBA\r\n"
				+ "CABACAAAABCBBBABCCACBCACBCACCBAACCCCBBAACBBBBAACACABBBCBACABCABABABCCACABAABCBBABABBCBABABABCCBCCCBA\r\n"
				+ "ABABBCBACCCCAAABCABAAABCCABBBBACAAACCAABCACAABBCCBAACAACCBCCACCCBABCBAABCAABABBACACBCBBCCCACBBBBCCBA\r\n"
				+ "CCAABCCABABACBCACBACCBBACCABBABAAAABAABBCBACCCBCBAAABCCAACBBCCAABABCCACAAACBBCCCBCAAACCCBACCACBAACAC\r\n"
				+ "AAABBCABABAACBAAACBBBAABCACBCABCBBCBBCBCCBACBABBBABAAABBACCACBABACBACCACBACCBCCCBCBBAACBCACBACCBACAC\r\n"
				+ "ABCAABCABCABBCAAAACABABBABBBCCCCCBBABCCCAABAAACACCCBABACABCBBCCAABCACBAAAABBACCACACACBAABAABABCAAACC\r\n"
				+ "AAACBCAABBACCCAAAAAABCBAAAACCBBCBCBCCBCBCCBBCCBABBAACACCABBCCACACABABABCCBBCBAAACCCCABABACCABBBCCBAA\r\n"
				+ "BAABCBABAAAACBABBCABACCCACAACCCCACBABBBBABBCACCBBCACBBCBCAABBABBBACBCBCBCBAACCBBAABCBAABBABABABBABBC\r\n"
				+ "BABACBBCACBBABABCABCCCBCAACAAABACAACABBBABBBCBABAABABBBAACAACCCBACCCBCCABBCAACCCABBCBBCCBCBBBCABACCC\r\n"
				+ "ABCABABBAAAACBACCCBABBBABACCBACBCAABAACCCBACAAABCBAACCCBBBACAABBAAAAACCCACACCABCCACABCCCAAABCCCACABB\r\n"
				+ "BACCBBACABCABAACBCABBCBBBBBACBBACCABBCAACAABAABBBCCABAAABBABBCAAABCBACCBABCCBBABCABBBCACBABBCCCACCBC\r\n"
				+ "BBBCBBCCABACCBCACBBAAACABCABAABBBBCAACBBCCCBBBBBCAABACAACBCCABAAACCABCBCCBBAAABAABBBACBACAABBABACBCB\r\n"
				+ "BAAABACCBBAACACBCCABBBCBBBBCCCBBCCBABBABBABBACAAABCCBBBCCCCBAAACCBCCCAABACBBAACCABACBCBABBBBBCCBBACA\r\n"
				+ "BCCACAACAABBBAABCBAABABABAACCCACCBCCBABABBAAACCACCCBCABCBAAACBCBCCBBCCCBBBACCABBACBBBCBABACCCCABACCB\r\n"
				+ "BBBCAAACBACCAAABACBCAACBACBCCBACBBCBBABBBABACABCABCABACCBABCBABBABACBBCBABAAAABACBABAABCBCCBAAACBBAC\r\n"
				+ "BABACBBBBACCCCBBCBACACCAAABCBBABACBAAAACBCBBAAAABABBBABCCCACCBBBCBCBCABBCBBABACCBACCCCACBABBBBCCBBAB\r\n"
				+ "CBBCABAAACACBABABBAACBCACACBABBABCABCBCBCCACAAACABCBCABACBCBACCACAAABAABBACAAAACCCBBCBCABCCBACCBCCAB\r\n"
				+ "CBCCCBAAABABBACBABCACACBBBBBACACBABACBCCACBBCBCACABABAACAAACBBACAAAABCCCCACBCCBBCBBCCCACBBABCCBCBBBA\r\n"
				+ "ACACCBCABBBBABCACABCABABCCBBCAACBAAABAABBBACBCBCCBCAAAABCCCABAACABBACCABABBBBCBCAAAAABAACACBCBCAAAAB\r\n"
				+ "ACBBBBCCABABABBAACCACCCACABBBABCAACBBBAABACCABCCBBBCBBCCABABABCBBCCABBBCCCACBCCCACCCBBAACABACBCABBAC\r\n"
				+ "CCCCBBCCACCCCACBABBAABAACCACCCCBCCCAACCCCBACAAABBAAABACAAACABACABABCAAACBABCBCBACCBBBBBBBCCACABCBCBB\r\n"
				+ "CBBBBCBACABCACCBBCAACAACCABBBCCACCCCCBBCBBACABCBCACCBABACBCBCACABCCACCACBCBCBAABCABABACBABABBABBBCAA\r\n"
				+ "ABAACAACBCCBAABBBBBCBCBCCAABAACBABBABBBABCABBAABAAAACBBBAABAAACBABBBCAABCCBCBABBACBAABAACBAABABCBACA\r\n"
				+ "BCAACACBBCBBACBBACCACBBCABBCCBCBACBBBABBCAAACABCCBCBCCABCACACBACACCCBAACBBACBBAACBACCCACBBABABCAABAB\r\n"
				+ "BBBBAABBAABCACCBBBBBAAACCBCAABCACAACACBBBCBBCAABBBBACCACACACABCACABCACBBCCCBAACACABCBBABABABACABABBB\r\n"
				+ "CBCCCBACCBABBACCABBBCBAACCBBCBABCBCABCABBAAACAACAACBCCACBCCACBACABCBBBABACCABBCCCAAABABBABCBBCCAAACB\r\n"
				+ "AABABCBCBABBBCAABBBABABCBBBACBCBACBCBAACABCCBAACABCABCCCABABCABBAAACCBAACCBACACACABBCACCAACABBABACAC\r\n"
				+ "CBACCACCCCCBBACCCACABCBBCACCBCCCBCBBACCBBACACCCCACBABCCACACBBBBBBABBBBCCABAAAACBBCCBBAAAABCBBCACBAAC\r\n"
				+ "ABAAABBABBCCABBACCABBABCCACCAACCCACBCCBBBABCCBCCBACBBBAAABCBBBBBAAACACAABCBCCBACCBBBCBCAAABCBBCCCCBC\r\n"
				+ "CBCCCBCACCBAABCABBCACCABACAACACBCCBAABBACAAAACCBCBABACCCAAACACCBABBBBBCCACCACAABCACAAAAAAAAACBBCBACA\r\n"
				+ "CBBCBCCABCBCCBCCACABCACBACABCBCCBBCBABCBBCCABCCCACCBBCCCACACCCBABAABBCCCCCCBBAABBCBCACBABAAACAACBCCC\r\n"
				+ "CACAACAABBCABACAAABCCBBBACBCABCBCBBCAAACAABBAAABBBCBAAACCAAAACBAAAABAACBAABACCAAAABCCCBBCAABBBAACCBA\r\n"
				+ "BACBBBCCACBBACABABBBABCCACCAABACCCCCAABBABCBACCBBBCCBABBCBCCBCACBBBBAAABACCCBBAABBCBCACCBAABABBABBCB\r\n"
				+ "BCBACBCBBCBAABAABCCABBAAAACCBBCCACCACCCCCACBCCBBCCAACACBBAABBCCACABCCBABBBCAAABACCCBBABBCBACBABCAABB\r\n"
				+ "AACACAACABAACCBBCCBCCCBBACACCAACCABCAABAAACCACABBAACBCCBBABBACABCCAABACAAABAABABCAAABBCAABAACCACABBA\r\n"
				+ "BABAACABABCCABCACBBCCCBCAAAAACCCCABAAABBBBBBAACABCCCCBCBCCABBCACCAAACAACCAACBACCACBCACBBBBBBACBAABCC\r\n"
				+ "BCCBCAACAAAACABAACBBCCCBAACACAAABACCAACBAABCBBBBACAACBCCABCCABBBACBCABCBACCACBCCBACABCACBCCABCCAAACB\r\n"
				+ "CCBCAABBACBCBBBCAAAACACBBBBACAACAAABBCCABCCCABBBCABAABCBACCACAABCBBACBCAABACBAABABCABACACCBAABABCBBB\r\n"
				+ "CCABCCABBBABABBBCCCABABBAAACCCBBCAACACCBAAACBBBAACABACABBCACCBCBACBBABABCAACAACCAAABCCCCACABAABACCBC\r\n"
				+ "CAACABBCBACACCCBACBABBAAAAABBAAABBAACCBCBACACCACBBBBBCABAABBCCCABCCBBCABBCBBBCCCABCBCACACABBBCCCACAA\r\n"
				+ "BACCBAACACBCBCAAAAABABABBACACABACCBBCCBABACBABBCACACBBACBCAABAACCBBAABBCBBBBBBCBABABAACBBBBBAABAABCA\r\n"
				+ "ACBCBCCCBCACACACBCABABCCCBCCAACACCABAAACABBAACCABBBCCAAABACBABBAABAABCCCAACBABCBAAAABABAAABACCCCBCAC\r\n"
				+ "AAAAAACABBAABAACBCCCBCCACBABCBABCCBABCBCAABBCABBABBAACBBBAABBBCBBCBBCBCBBBCACABCCCABBBBAABCCACCCACAB\r\n"
				+ "AAACBBBACABAABBCCACCCAACCCCABACCCBCACBBBBABACACCBABBABBAAABCCBCACACBCABBCABAACBACBCCCAAABCBCCBBBAAAC\r\n"
				+ "CCBACACABBBBBACBBBCACCAABAACBCACAAABCCCBCBBBABAAABCABAACBCCACCCCACCCBAABBCCBBBBCACCBCCCBBACBCABBBAAB\r\n"
				+ "CABCBACCABCCCBBBAACCCBCBBBCBCCBABAABCACCABAAAACCCACBCBBBABAABCBBBAABCCBCACBBBBCBBCABBBBBABBCCACABBAA\r\n"
				+ "CABAACCAABACBABACACBCAABBCACCAABAACBBCAABBBAAAAACABBBBACBCCCCCAABCBABCCBABCBCCABACAACBCCABBBCABABACA\r\n"
				+ "ACCBACBCABCACACCBCABBCAABABCCCCCACCABBCCACBBABCACCBBCABCABBABBACCCBBBCCBBABACCCAABACBCACCBACBCCCBABA\r\n"
				+ "BCCCCACACBBCCABBBCCAABCCBACCABAABBBCBCCCACAACCABBCCBABABACBCAAABBABAABAAACABBACBBBACBCCBCAABACACCCCB\r\n"
				+ "BBAACABBCCBCABBCACCBCCCAAACCAAACBCAABCBBACABABBCBCABBACACAABABACCCCBABABCCBAABBABBCCBBCCABBCABCACCBA\r\n"
				+ "AACAABCCCCCBBAACABCAACACCBACAACBBBBABACAACCACBCBBCAACBBACACBACBACAACACACABCAAAACACBCBACCABCBACABCCCC\r\n"
				+ "CBACAABABBBCCABAACBAACBBBCACABBCAACAAACABCBCBCBCCBBCCACCCCBAACCBCACCABAAABABAABBABCABBBBABCABBCCCACA\r\n"
				+ "AAAABCCBACACABCCBCCABACACACAAACBCCCCABAACAAACCACABBAABACBBAABABBCCCCBABBAACABCABBACBCCBABAAACABAAABB\r\n"
				+ "BBABACCCBCACAABCBAAACBBBBBCABABCBAABABBBABCBACACBBCCBBCABBBAACCCACCABBABBCACCBBAAACBAABABBABBAAABBBB\r\n"
				+ "BBCACBACCAAAAACBCBAACABAACABAACACCACABABBACBBAABCACABCCBBABBACBAAACBBCAACCAAABACCCBBACCBABABAACAABAC\r\n"
				+ "CCBCBBCCBABBABCBAABCAACCAAACCCABCBBCBBABABBAAABBBCAACBABBBBBBACACCBBCBAACCAABBCABABCACCBCABCCBBBCCBC\r\n"
				+ "BABCBAABACACBCCBBACABABBAACCBABBABBABAACBACABCCCCBCACBBCCBACABCCACBBBACACABCBBAACAAACBBBCBAABAACCBAC\r\n"
				+ "CBBBBACCBCCCCBABBACABCAACAACCBBCCBBBAAAAAABACACCBCCBAACBCCCCCBCAAACCCACBACCBCBBABBABCCABCAABBBAACAAB\r\n"
				+ "ABCCCCACCAACBBCCAABCBBABBAACCCABACCABACBABCAACBABBAAABBBACCAABBABCBBABCCAABABACBBACBBBBABCCCBCBACCBC\r\n"
				+ "CCABCBBCCACCCACBABBACACACACACABCACACBCCACAAACCCBBBABCABCCBCABAAACACABABBAABBCCAACCCBBACBCCCBCBCCACAB\r\n"
				+ "ACCCCBCCCACBCCCBCABBBBABABCBABABCBCBABAABCAAACBCCACCBAABBACBCBBBCABBCAACBACCBBBBBACBBCBBBCCAAACBAABB\r\n"
				+ "CBCACAACBCBBAACCCABAABBACCCABBCCAABACBCCCCBABACBCACCCCBBAAACBABBCBCCCBCBACABBCBCCACBBCAAABAACCCAAAAA\r\n"
				+ "BAABCABBACBBBAAACBCBACCBBABBABCABBCCAACCCBBBBABBAAABAABCCAACABCACACBCCBBAAABBCCCCCBBBBBABBACCCBABCBA\r\n"
				+ "AAAAACCBABCBBCCCBBCABACABBBCCABCAABBCCCBCCBABCABAABABBABBBAAAAAABACCCCCBABCCAACABCAAAAABCCAAAAACCCCA\r\n"
				+ "CCCACBABCABAABCCCBCAACBCCBBACBACBCCABBCCACABABACABAABBBBCCBCABCABBCBACBCBCCBABCCCBCBCBBBCBCABABABCBB\r\n"
				+ "BBAABCACCCCCCACCCBCCACBAABBBACCCAABCBBABBCCBCBBCBCBBCABAABABACCAACBCABBCCBBBBBBABCCACBBAABABACABCBAC\r\n"
				+ "ABBBABCBBAAACABACCABAAABACACACBCCCABBCBCBAAACCACBCBCCCACBCBACABCCCAABACCACACCBCBCCAABACABCABAAABBCCA\r\n"
				+ "ACBBABCBCACCBBBACBBCACCCAABBAABCBCABBBCBAABAABAACCCCBBCBACACBABABBABBBBCBCBCBABACCCAAABABAACACBCCCBA\r\n"
				+ "BCACBABBACABCABBBABCACABACCCCACBACAAACAABBCABBBCABBACCCCCCBCBCBAAABBABCCAABCCCCAABCCBAABACAACABAACBB\r\n"
				+ "CAABBBBCBCABCBCBAACCACABCBCAABACCBCCBBABBAABBACACAABAABACBBBCCAABBAAACBBCCBABACAAABCBCBCABACCBCBCABB\r\n"
				+ "CABAAAAACCBACBCCBBBBAABCCBAACBCCABBAACACBBAAAACBCBCACBACCABAACBABCABCBCACACCBBCAAABACBBACABCCBABBBAA\r\n"
				+ "ACBABCCAAACCCCBABBAACCAAAACBBCCCACCBBACBBCAAABCBBBABBAAACACACCAAAAACBAABBAAAAABABBBBACABCCABAABCBCBC\r\n"
				+ "AACCACAAABBCABCCCBAABABBCCAABCCACABACBBBCAACACBCBBCCACCCBBBBCCCCBBCCBAACBAACCCCCCBCABACACBBCBACACCBC\r\n"
				+ "CABCAAACACAACCACCBBBCCACAAABAABCBACAACBBCBCBBCBBBBCACABCABACACAABABAAAABAAABAACAACCCCBCABABAACBCBBCB\r\n";
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		br = new BufferedReader(new StringReader(src));
		StringTokenizer st;

		for (int tc = 1; tc <= 1; tc++) {
			ans = 0;
			br.readLine();
			map = new String[100][100];

			for (int i = 0; i < 100; i++) {
				map[i] = br.readLine().split("");
			}
			end:for (int i = 100; i > 0; i--) {// 회문 길이해주기....
				// 헹
				row: for (int j = 0; j < 100; j++) {// 행
					for (int idx = 0; idx < 100 - i + 1; idx++) {
						if (checkrow(i, j, idx)) {
							System.out.println("뿅row" + i);
							if (i > ans) {
								ans = i;
							}
							break row;
						}
					}
				}
				// 열 탐색!!!
				col: for (int j = 0; j < 100; j++) {// 행
					for (int idx = 0; idx < 100 - i + 1; idx++) {
						if (checkcol(i, j, idx)) {
							System.out.println("뿅col" + i);
							if (i > ans) {
								ans = i;
							}
							break end;
						}
					}
				}
			}
			System.out.println("#" + tc + " " + ans);
		}
	}

	static int ans;
	static String[][] map;

	static boolean checkrow(int n, int row, int idx) {
		// idx 시작위치
		for (int j = 0; j < n / 2; j++) {// 묶음씩 체크
			if (!map[row][idx + j].equals(map[row][idx + n - 1 - j])) {
				return false;
			}
		}
		return true;

	}

	static boolean checkcol(int n, int col, int idx) {
		// idx 시작위치
		for (int j = 0; j < n / 2; j++) {// 묶음씩 체크
			if (!map[idx + j][col].equals(map[idx + n - 1 - j][col])) {
				return false;
			}
		}
		return true;

	}
}
