import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Solution_1240 {
//	public class Solution {
	public static void main(String[] args) throws NumberFormatException, IOException {
		String src = "1\r\n" + "30 100\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"
				+ "0000000000000000000000010111100011010111011001100101110110111011011101100110010000000000000000000000\r\n"
				+ "0000000000000000000000010111100011010111011001100101110110111011011101100110010000000000000000000000\r\n"
				+ "0000000000000000000000010111100011010111011001100101110110111011011101100110010000000000000000000000\r\n"
				+ "0000000000000000000000010111100011010111011001100101110110111011011101100110010000000000000000000000\r\n"
				+ "0000000000000000000000010111100011010111011001100101110110111011011101100110010000000000000000000000\r\n"
				+ "0000000000000000000000010111100011010111011001100101110110111011011101100110010000000000000000000000\r\n"
				+ "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n";
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		br = new BufferedReader(new StringReader(src));
		StringTokenizer st;

		int T = Integer.parseInt(br.readLine());
		for (int tc = 1; tc <= T; tc++) {
			int ans = 0;
			st = new StringTokenizer(br.readLine());
			int N = Integer.parseInt(st.nextToken());
			int M = Integer.parseInt(st.nextToken());
			// 8개씩 쪼개서 숫자로 변환하고
			// 검증코드가 맞다면 그 숫자를 다더하고
			// 틀리면 0을 출력한다.ㄴㄴ
			String[][] arr = new String[N][M];
			String tmpCode = null;
			for (int i = 0; i < N; i++) {
				String tmp = br.readLine();
				if (!tmp.substring(M / 2, M / 2 + 8).equals("00000000")) {
//					System.out.println(tmp);// 찾았고.
					tmpCode = tmp;
				}
			}
//			System.out.println(tmpCode);// 추출했고
			// 끝이 1이면 거기가 끝임
			String[] num = { "0001101", "0011001", "0010011", "0111101", "0100011", "0110001", "0101111", "0111011",
					"0110111", "0001011" };
			int startIdx = 0;

			for (int i = M - 1; i > 0; i--) {
				if (tmpCode.charAt(i) == '1') {
					startIdx = i - 56 + 1;
					break;
				}
			}
//			System.out.println(startIdx);

			// 진짜 코드 56자리 뽑아내기
			tmpCode = tmpCode.substring(startIdx, startIdx + 56);
			int[] Code = new int[8];
			int idx = 0;
			// tmpCode에서 7개의 숫자 뽑아내기
			for (int i = 0; i < 8; i++) {
				String tmpStr = tmpCode.substring(7 * i, 7 + 7 * i);
//				System.out.println(tmpStr);
				// 7자리씩 뽑아냈고 얘를 1자리의 수로 돌리기
				for (int j = 0; j < num.length; j++) {
					if (tmpStr.equals(num[j])) {
						Code[idx++] = j;
					}
				}
			}
			// 숫자 뽑아냈고 얘를 올바른 암호코드가 맞는지 체크하기
//			System.out.println(Arrays.toString(Code));

			int n24 = 0;
			int n13 = 0;
			for (int i = 0; i < Code.length - 1; i++) {
				if (i % 2 == 0) {
					n13 += Code[i];
				} else {
					n24 += Code[i];
				}
			}
//			System.out.println(n13 + " " + n24 + " " + Code[7]);
			int check = (n13 * 3) + n24 + Code[7];
			if (check % 10 == 0) {
				for (int a : Code) {
					ans += a;
				}
			} else {
				ans = 0;
			}
//			System.out.println(check);
			System.out.println("#" + tc + " " + ans);
		}
	}

}
